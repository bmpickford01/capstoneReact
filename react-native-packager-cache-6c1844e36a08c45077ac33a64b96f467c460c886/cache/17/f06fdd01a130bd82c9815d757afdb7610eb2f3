Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _class,
    _temp,
    _jsxFileName = '/home/benjamin/capstone/capstone/app/components/Settings.js';

var _react = require('react');

var _react2 = babelHelpers.interopRequireDefault(_react);

var _reactNative = require('react-native');

var _reactNativeElevatedView = require('react-native-elevated-view');

var _reactNativeElevatedView2 = babelHelpers.interopRequireDefault(_reactNativeElevatedView);

var _Dimensions = require('Dimensions');

var _Dimensions2 = babelHelpers.interopRequireDefault(_Dimensions);

var _Header = require('../Header');

var _Header2 = babelHelpers.interopRequireDefault(_Header);

var Settings = (_temp = _class = function (_React$Component) {
  babelHelpers.inherits(Settings, _React$Component);

  function Settings() {
    babelHelpers.classCallCheck(this, Settings);
    return babelHelpers.possibleConstructorReturn(this, (Settings.__proto__ || Object.getPrototypeOf(Settings)).apply(this, arguments));
  }

  babelHelpers.createClass(Settings, [{
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var _Dimensions$get = _Dimensions2.default.get('window'),
          height = _Dimensions$get.height,
          width = _Dimensions$get.width;
    }
  }, {
    key: 'render',
    value: function render() {
      var _Dimensions$get2 = _Dimensions2.default.get('window'),
          height = _Dimensions$get2.height,
          width = _Dimensions$get2.width;

      return _react2.default.createElement(
        _reactNative.View,
        {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 20
          }
        },
        _react2.default.createElement(_Header2.default, { context: this, __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        }),
        _react2.default.createElement(_reactNative.StatusBar, { hidden: true, __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        }),
        _react2.default.createElement(
          _reactNativeElevatedView2.default,
          { elevation: 4, style: { width: 100, margin: 10, height: 80, backgroundColor: 'white' }, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 24
              }
            },
            'Test'
          )
        ),
        _react2.default.createElement(
          _reactNativeElevatedView2.default,
          { elevation: 4, style: styles.stayElevated, __source: {
              fileName: _jsxFileName,
              lineNumber: 26
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 27
              }
            },
            'Test'
          )
        ),
        _react2.default.createElement(
          _reactNativeElevatedView2.default,
          { elevation: 4, style: styles.stayElevated, __source: {
              fileName: _jsxFileName,
              lineNumber: 29
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            {
              __source: {
                fileName: _jsxFileName,
                lineNumber: 30
              }
            },
            'Test'
          )
        )
      );
    }
  }]);
  return Settings;
}(_react2.default.Component), _class.navigationOptions = {
  drawerLabel: 'Settings'
}, _temp);
exports.default = Settings;


var styles = _reactNative.StyleSheet.create({
  stayElevated: {
    width: 100,
    height: 80,
    margin: 10,
    backgroundColor: 'white'
  }
});